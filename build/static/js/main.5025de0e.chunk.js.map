{"version":3,"sources":["types/types.js","reducers/uiReducer.js","reducers/calendarReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","modalOpen","events","activeEvent","checking","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","prepareEvents","end","moment","toDate","start","eventAddNew","event","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","console","log","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PrivateRoute","children","to","PublicRoute","AppRouter","exact","path","element","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5025de0e.chunk.js","sourcesContent":["\nexport const types = {\n\n    uiOpenModal: '[ui] Open modal',\n    uiCloseModal: '[ui] Close modal',\n\n    \n    eventSetActive: '[event] Set Active',\n    eventLogout: '[event] Logout event',\n    \n    evetStartAddNew: '[event] Start add new',\n    eventAddNew: '[event] Add new',\n    eventClearActiveEvent: '[event] Clear active event',\n    eventUpdated: '[event] Event updated',\n    eventDeleted: '[event] Event deleted',\n    eventLoaded: '[event] Events loaded',\n\n\n    authCheckingFinish: '[auth] Finish checking login state',\n    authStartLogin: '[auth] Start login',\n    authLogin: '[auth] Login',\n    authStartRegister: '[auth] Start Register',\n    authStartStartTokenRenew: '[auth] Start token renew',\n    authLogout: '[auth] Logout',\n\n}","import { types } from \"../types/types\";\n\nconst initialState = {\n    modalOpen: false,\n}\n\n\n\nexport const uiReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        case types.uiOpenModal:\n            return {\n                ...state,\n                modalOpen: true\n            }\n\n        case types.uiCloseModal:\n            return {\n                ...state,\n                modalOpen: false\n            }\n    \n        default:\n            return state;\n    }\n\n\n}","import { types } from '../types/types';\n// {\n//     id: 'askdjhaksdjas',\n//     title: 'Cumpleaños del jefe',\n//     start: moment().toDate(),\n//     end: moment().add( 2, 'hours' ).toDate(),\n//     notes: 'Comprar el pastel',\n//     user: {\n//         _id: '123',\n//         name: 'Fernando'\n//     }\n// }\n\nconst initialState = {\n    events: [],\n    activeEvent: null\n};\n\n\nexport const calendarReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        \n        case types.eventSetActive:\n            return {\n                ...state,\n                activeEvent: action.payload\n            }\n        \n        case types.eventAddNew:\n            return {\n                ...state,\n                events: [\n                    ...state.events,\n                    action.payload\n                ]\n            }\n    \n        case types.eventClearActiveEvent:\n            return {\n                ...state,\n                activeEvent: null\n            }\n\n\n        case types.eventUpdated:\n            return {\n                ...state,\n                events: state.events.map(\n                    e => ( e.id === action.payload.id ) ? action.payload : e\n                )\n            }\n        \n        case types.eventDeleted:\n            return {\n                ...state,\n                events: state.events.filter(\n                    e => ( e.id !== state.activeEvent.id )\n                ),\n                activeEvent: null\n            }\n\n        case types.eventLoaded:\n            return {\n                ...state,\n                events: [ ...action.payload ]\n            }\n\n        case types.eventLogout:\n            return {\n                ...initialState\n            }\n\n        default:\n            return state;\n    }\n\n\n}\n","import { types } from '../types/types';\n\nconst initialState = {\n    checking: true,\n    // uid: null,\n    // name: null\n}\n\nexport const authReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        \n        case types.authLogin:\n            return {\n                ...state,\n                ...action.payload,\n                checking: false\n            }\n\n        case types.authCheckingFinish:\n            return {\n                ...state,\n                checking: false\n            }\n\n        case types.authLogout:\n            return {\n                checking: false\n            }\n            \n        default:\n            return state;\n    }\n\n}\n\n\n","import { combineReducers } from 'redux';\n\nimport { uiReducer } from './uiReducer';\nimport { calendarReducer } from './calendarReducer';\nimport { authReducer } from './authReducer';\n\n\n\nexport const rootReducer = combineReducers({\n    ui: uiReducer,\n    calendar: calendarReducer,\n    auth: authReducer\n})\n\n","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\n\r\nconst composeEnhancers =(typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store =  createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n);","const baseUrl = process.env.REACT_APP_API_URL;\n\nconst fetchSinToken = ( endpoint, data, method = 'GET' ) => {\n\n    const url = `${ baseUrl }/${ endpoint }`;\n\n    if ( method === 'GET' ) {\n        return fetch( url );\n    } else {\n        return fetch( url, {\n            method,\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify( data )\n        });\n    }\n}\n\nconst fetchConToken = ( endpoint, data, method = 'GET' ) => {\n\n    const url = `${ baseUrl }/${ endpoint }`;\n    const token = localStorage.getItem('token') || '';\n\n    if ( method === 'GET' ) {\n        return fetch( url, {\n            method,\n            headers: {\n                'x-token': token\n            }\n        });\n    } else {\n        return fetch( url, {\n            method,\n            headers: {\n                'Content-type': 'application/json',\n                'x-token': token\n            },\n            body: JSON.stringify( data )\n        });\n    }\n}\n\n\n\nexport {\n    fetchSinToken,\n    fetchConToken\n}","import moment from 'moment'\n\n\nexport const prepareEvents = ( events = [] ) => {\n\n    return events.map(\n        (e) => ({\n            ...e,\n            end: moment( e.end ).toDate(),\n            start: moment( e.start ).toDate(),\n        })\n    );\n\n}","import Swal from 'sweetalert2';\n\nimport { types } from '../types/types';\nimport { fetchConToken } from '../helpers/fetch';\nimport { prepareEvents } from '../helpers/prepareEvents';\n\n\nexport const eventStartAddNew = ( event ) => {\n    return async( dispatch, getState ) => {\n\n        const { uid, name } = getState().auth;\n\n        try {\n            const resp = await fetchConToken('events', event, 'POST');\n            const body = await resp.json();\n\n            console.log(body)\n\n            if ( body.ok ) {\n                event.id = body.evento.id;\n                event.user = {\n                    _id: uid,\n                    name: name\n                }\n                console.log( event );\n                dispatch( eventAddNew( event ) );\n            }\n\n\n        } catch (error) {\n            console.log(error);\n        }\n\n        \n\n    }\n}\n\n\n\nconst eventAddNew = (event) => ({\n    type: types.eventAddNew,\n    payload: event\n});\n\nexport const eventSetActive = (event) => ({\n    type: types.eventSetActive,\n    payload: event\n});\n\nexport const eventClearActiveEvent = () => ({ type: types.eventClearActiveEvent });\n\n\n\nexport const eventStartUpdate = ( event ) => {\n    return async(dispatch) => {\n\n        try {\n            const resp = await fetchConToken(`events/${ event.id }`, event, 'PUT' );\n            const body = await resp.json();\n\n            if ( body.ok ) {\n                dispatch( eventUpdated( event ) );\n            } else {\n                Swal.fire('Error', body.msg, 'error');\n            }\n\n\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n}\n\nconst eventUpdated = ( event ) => ({\n    type: types.eventUpdated,\n    payload: event\n});\n\n\nexport const eventStartDelete = () => {\n    return async ( dispatch, getState ) => {\n\n        const { id } = getState().calendar.activeEvent;\n        try {\n            const resp = await fetchConToken(`events/${ id }`, {}, 'DELETE' );\n            const body = await resp.json();\n\n            if ( body.ok ) {\n                dispatch( eventDeleted() );\n            } else {\n                Swal.fire('Error', body.msg, 'error');\n            }\n\n\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n}\n\n\nconst eventDeleted = () => ({ type: types.eventDeleted });\n\n\nexport const eventStartLoading = () => {\n    return async(dispatch) => {\n\n        try {\n            \n            const resp = await fetchConToken( 'events' );\n            const body = await resp.json();\n\n            const events = prepareEvents( body.eventos );\n            dispatch( eventLoaded( events ) );\n\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n}\n\nconst eventLoaded = (events) => ({\n    type: types.eventLoaded,\n    payload: events\n})\n\nexport const eventLogout =() => ({ type: types.eventLogout });","import { fetchSinToken, fetchConToken } from '../helpers/fetch';\nimport { types } from '../types/types';\nimport Swal from 'sweetalert2';\nimport { eventLogout } from './events';\n\n\n\nexport const startLogin = ( email, password ) => {\n    return async( dispatch ) => {\n\n        const resp = await fetchSinToken( 'auth', { email, password }, 'POST' );\n        const body = await resp.json();\n\n        if( body.ok ) {\n            localStorage.setItem('token', body.token );\n            localStorage.setItem('token-init-date', new Date().getTime() );\n\n            dispatch( login({\n                uid: body.uid,\n                name: body.name,\n            }) );\n        } else {\n            Swal.fire('Error', body.msg, 'error');\n        }\n    }\n}\n\nexport const startRegister = ( email, password, name ) => {\n    return async( dispatch ) => {\n\n        const resp = await fetchSinToken( 'auth/new', { email, password, name }, 'POST' );\n        const body = await resp.json();\n\n        if( body.ok ) {\n            localStorage.setItem('token', body.token );\n            localStorage.setItem('token-init-date', new Date().getTime() );\n\n            dispatch( login({\n                uid: body.uid,\n                name: body.name,\n            }) );\n        } else {\n            Swal.fire('Error', body.msg, 'error');\n        }\n    }\n}\n\nexport const startChecking = () => {\n    return async(dispatch) => {\n\n        const resp = await fetchConToken('auth/renew');\n        const body = await resp.json();\n\n        if( body.ok ) {\n            localStorage.setItem('token', body.token );\n            localStorage.setItem('token-init-date', new Date().getTime() );\n\n            dispatch( login({\n                uid: body.uid,\n                name: body.name,\n            }) );\n        } else {\n            dispatch( checkingFinish() );\n        }\n    }\n}\n\nconst checkingFinish = () => ({ type: types.authCheckingFinish });\n\nconst login = ( user ) => ({\n    type: types.authLogin,\n    payload: user\n});\n\nexport const startLogout = () => {\n    return ( dispatch ) => {\n\n        localStorage.clear();\n        dispatch( eventLogout() );\n        dispatch( logout() );\n    }\n}\n\nconst logout = () => ({ type: types.authLogout })","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [ formLoginValues, handleLoginInputChange ] = useForm({\r\n        lEmail: \"emma@mail.com\",\r\n        lPassword: '123456'\r\n    }); \r\n\r\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm({\r\n        rName: \"Ivan\",\r\n        rEmail: \"ivan@mail.com\",\r\n        rPassword1: '123456',\r\n        rPassword2: '123456',\r\n    }); \r\n\r\n    const { lEmail, lPassword } = formLoginValues;\r\n    const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        // console.log( formLoginValues );\r\n        dispatch( startLogin( lEmail, lPassword ) );\r\n    }\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( rPassword1 !== rPassword2 ){\r\n            return Swal.fire('Error', 'Las contraseñas deben de ser iguales', 'error');\r\n        }\r\n\r\n        dispatch( startRegister(rEmail, rPassword1, rName) );\r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={ handleLogin }>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name='lEmail'\r\n                                value={ lEmail }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name='lPassword'\r\n                                value={ lPassword }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={ handleRegister } >\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name= \"rName\"\r\n                                value={ rName }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name= \"rEmail\"\r\n                                value={ rEmail }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name= \"rPassword1\"\r\n                                value={ rPassword1 }\r\n                                onChange={ handleRegisterInputChange } \r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\"\r\n                                name= \"rPassword2\"\r\n                                value={ rPassword2 }\r\n                                onChange={ handleRegisterInputChange } \r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const Navbar = () => {\r\n\r\n    const { name } = useSelector( state => state.auth );\r\n    const dispatch = useDispatch();\r\n\r\n    const handleLogout = () => {\r\n        dispatch( startLogout() );\r\n    }\r\n\r\n    return (\r\n        <div className='navbar navbar-dark bg-dark mb-4'>\r\n            <span className='navbar-brand'>\r\n                { name }\r\n            </span>\r\n\r\n            <button \r\n                className='btn btn-outline-danger'\r\n                onClick={ handleLogout }>\r\n                <i className='fas fa-sign-out-alt' />\r\n                <span> Salir</span>\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n","export const messages = {\n    allDay: 'Todo el día',\n    previous: '<',\n    next: '>',\n    today: 'Hoy',\n    month: 'Mes',\n    week: 'Semana',\n    day: 'Día',\n    agenda: 'Agenda',\n    date: 'Fecha',\n    time: 'Hora',\n    event: 'Evento',\n    noEventsInRange: 'No hay eventos en este rango',\n    showMore: total => `+ Ver más (${total})`\n};","import React from 'react';\r\n\r\nexport const CalendarEvent = ({ event }) => {\r\n\r\n    const { title, user } = event;\r\n\r\n    return (\r\n        <div>\r\n            <strong> { title } </strong>\r\n            <span>- { user.name } </span>\r\n        </div>\r\n    );\r\n};\r\n","import { types } from '../types/types';\n\n\n\nexport const uiOpenModal = () => ({ type: types.uiOpenModal });\nexport const uiCloseModal = () => ({ type: types.uiCloseModal });","import React, { useEffect, useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseModal } from '../../actions/ui';\r\n\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n    },\r\n};\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\r\nconst nowPlus1 = now.clone().add(1, 'hours');\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: nowPlus1.toDate()\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const { modalOpen } = useSelector( state => state.ui );\r\n    const { activeEvent } = useSelector( state => state.calendar );\r\n    const dispatch = useDispatch();\r\n\r\n    const [dateStart, setDateStart] = useState( now.toDate() );\r\n    const [dateEnd, setDateEnd] = useState( nowPlus1.toDate() );\r\n    const [titleValid, setTitleValid] = useState(true);\r\n\r\n    const [formValues, setFormValues] = useState(initEvent);\r\n\r\n    const { notes, title, start, end } = formValues;\r\n\r\n    useEffect(() => {\r\n        if( activeEvent ){\r\n            setFormValues(activeEvent);\r\n        }\r\n        else{\r\n            setFormValues( initEvent ); \r\n        }\r\n    }, [activeEvent, setFormValues ]);\r\n    \r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n    const closeModal = () => {\r\n        // TODO: Cerrar el modal\r\n        dispatch( uiCloseModal() );\r\n        dispatch( eventClearActiveEvent() );  \r\n        setFormValues( initEvent );\r\n    }\r\n\r\n    const handleStartDateChange = (e) => {\r\n        setDateStart(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        });\r\n    }\r\n\r\n    const handleEndDateChange = (e) => {\r\n        setDateEnd(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        });\r\n    }\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n\r\n        const momentStart = moment( start );\r\n        const momentEnd = moment( end );\r\n\r\n        if( momentStart.isSameOrAfter( momentEnd ) ){\r\n            return Swal.fire('Error', 'La fecha final debe ser mayor a la fecha de inicio', 'error');   \r\n        }\r\n\r\n        if( title.trim().length < 2 ){\r\n            return setTitleValid( false );\r\n        }\r\n\r\n        // TODO: Realizar Grabacion en la BD\r\n        if(activeEvent){\r\n            dispatch( eventStartUpdate( formValues ) )\r\n        }\r\n        else{\r\n            dispatch( eventStartAddNew( formValues ) );\r\n        }\r\n\r\n        setTitleValid(true);\r\n        closeModal();\r\n    } \r\n\r\n    return (\r\n        <Modal\r\n            isOpen={ modalOpen }\r\n            // onAfterOpen={afterOpenModal}\r\n            onRequestClose={ closeModal }\r\n            style={ customStyles }\r\n            closeTimeoutMS={ 200 }\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-fondo\"\r\n        >\r\n            <h1> { (activeEvent) ? 'Editar evento' : 'Nuevo evento' } </h1>\r\n            <hr />\r\n            <form \r\n                onSubmit={ handleSubmitForm }\r\n                className=\"container\">\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange={ handleStartDateChange }\r\n                        value={ dateStart }\r\n                        className='form-control'\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange={ handleEndDateChange }\r\n                        value={ dateEnd }\r\n                        minDate={ dateStart }\r\n                        className='form-control'\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className={`form-control ${!titleValid && 'is-invalid'} `}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={ title }\r\n                        onChange={ handleInputChange }\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea \r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={ notes }\r\n                        onChange={ handleInputChange }\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n        </Modal>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClickNew = () => {\r\n        dispatch( uiOpenModal() );\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className='btn btn-primary fab'\r\n            onClick={ handleClickNew }>\r\n        \r\n            <i className='fas fa-plus'/>\r\n        </button>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = () => {\r\n        dispatch( eventStartDelete() );\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className='btn btn-danger fab-danger'\r\n            onClick={ handleDelete }>\r\n                <i className='fas fa-trash'></i>\r\n                <span> Borrar evento</span>\r\n        </button>\r\n    );\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\n\r\nimport { Navbar } from '../ui/Navbar';\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport 'moment/locale/es';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\n// cambiar momento a español\r\nmoment.locale('es');\r\nconst localizer = momentLocalizer(moment);\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { events, activeEvent } = useSelector( state => state.calendar );\r\n    const { uid } = useSelector( state => state.auth );\r\n\r\n    const [lastView, setLastView] = useState( localStorage.getItem('lastView') || 'month' );\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch( eventStartLoading() )\r\n      \r\n    }, [ dispatch ]);\r\n    \r\n\r\n    const onDoubleClick = (e) => {\r\n        // console.log(e);\r\n        dispatch( uiOpenModal() );\r\n    }\r\n\r\n    const onSelectEvent = (e) => {\r\n        // console.log(e);\r\n        dispatch( eventSetActive(e) );\r\n    }\r\n\r\n    const onViewChange = (e) => {\r\n        setLastView(e);\r\n        localStorage.setItem('lastView', e);\r\n    }\r\n\r\n    const onSelectSlot = (e) => {\r\n        dispatch( eventClearActiveEvent() )\r\n    }\r\n\r\n    const eventStyleGetter = ( event, start, end, isSelected ) => {\r\n\r\n        const style = {\r\n            backgroundColor: (uid === event.user._id) ? '#367CF7' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n        \r\n        return {\r\n            style\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className='calendar-screen'>\r\n            <Navbar />\r\n\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={messages}\r\n                eventPropGetter={ eventStyleGetter }\r\n                onDoubleClickEvent={ onDoubleClick }\r\n                onSelectEvent={ onSelectEvent }\r\n                onView={ onViewChange }\r\n                onSelectSlot={ onSelectSlot }\r\n                selectable={ true }\r\n                view={ lastView }\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n\r\n            <AddNewFab />\r\n            {\r\n                (activeEvent) && <DeleteEventFab />\r\n            }\r\n\r\n            <CalendarModal />\r\n\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\n \r\nexport const PrivateRoute = ({ children, uid }) => {\r\n \r\n  return !!uid\r\n    ? children\r\n    : <Navigate to='/login' />\r\n}","import React from 'react'\r\nimport { Navigate } from 'react-router-dom'\r\n \r\nexport const PublicRoute = ({ children, uid }) => {\r\n  return !!uid\r\n    ? <Navigate to='/' />\r\n    : children\r\n \r\n}","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Route,  BrowserRouter as Router, Routes } from 'react-router-dom';\r\nimport { startChecking } from '../actions/auth';\r\nimport { LoginScreen } from '../components/auth/LoginScreen'\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n \r\nexport const AppRouter = () => {\r\n \r\n  const dispatch = useDispatch();\r\n  const { checking, uid } = useSelector(state => state.auth)\r\n \r\n  useEffect(() => {\r\n    dispatch(startChecking());\r\n  }, [dispatch])\r\n \r\n  if( checking ){\r\n    return ( <h5> Espere... </h5> )\r\n  }\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Routes>\r\n          <Route exact path='/login' element={ \r\n              <PublicRoute uid={uid} >\r\n                <LoginScreen/> \r\n              </PublicRoute>\r\n            } \r\n          />\r\n          <Route exact path='/*' \r\n            element={ \r\n              <PrivateRoute uid={uid}>\r\n                <CalendarScreen />\r\n              </PrivateRoute> \r\n            }  \r\n          />\r\n          \r\n        </Routes>\r\n      </div>\r\n    </Router>\r\n  )\r\n} \r\n","import React from 'react';\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from './store/store';\r\n\r\nimport { AppRouter } from './router/AppRouter';\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    );\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css';\n\n// console.log(process.env);\n\nReactDOM.render(\n  <CalendarApp />, \n  document.getElementById('root')\n);"],"sourceRoot":""}